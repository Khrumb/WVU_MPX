Programmer's Manual
Group 13: Government Employees
Version: R2

----------STRUCTURES----------

Process control block (PCB): MPX is a multiprocessing system and needs a way to handle multiple processes at the same time. We use the PCBs in a queue to keep track of what processes need to run next and hold any that have been suspended. Our process control block structure has the following parameters
- process name: name assigned to the processes must have 8 characters and room for a null character
- process class: class the process belongs too ex: application or system, type int
- priority: stored as int of value 0 to 9, determine which processes should be at the top of the queue to run next
- state: 2 variables 
	- suspended or not suspended
	- ready running or blocked
- process stack: 1024 bytes allocated with an unsigned char, must keep track of stack top and bottom
- pointer to other PCBs: doubly linked list which has pointers to the next and previous processes in the queue

Queue: Structure created in C to handle our ready queue and our blocked queue
- queue parameters: head and tail of type PCB as well as int to hold a count
- ready queue stores processes by their priority
- blocked queue stores processes in a FIFO order

----------Procedures----------
***note: procedures cannot be inside command handler***

- AllocatePCB()
	description: calls sys_alloc_mem() to allocate  memory for process
	paramaters: None
	valid return: pcb pointer
	invalid return: null (error)
- FreePCB()
	description: calls sys_free_mem() to free all memory associated with a given PCB
	parameters: pcb pointer
	valid return: print success
	invalid return: error code
- setupPCB()
	description: calls allocatePCB, initializes the a pcb, sets pcb to a ready state
	parameters: process name, class, and priority
	valid return: PCB pointer
	invalid return: null for error or invalid input message
- findPCB()
	description: searches both queues for a process with the given name
	parameters: process name
	valid return: PCB pointer
	invalid return: null if PCB does not exist
- insertPCB()
	description: puts PCB into correct queue
	parameters: PCB pointer
	returns: none
- removePCB()
	description: removes PCB from queue it is currently stored in
	parameters: pointer to PCB
	valid return: confirmation message
	invalid return: null (PCB not found)

----------Functions----------

- itoa
	description: converts integer variable to a string
        parameters: takes in an integer value and decimal base value
        returns: a character pointer to the new string integer
- BCDtoDec 
	description: converts a BCD character to a decimal character
        parameters: takes in a character bcd
        returns: a character integer value
- DectoBCD
	description: converts a decimal character to a BCD character
        parameters: takes in an integer value
        returns: a character bcd
- formatNum
	description: converts ASCII characters to number values
 	parameters: a number character
 	returns: an integer
- asciiToDec
	description: converts ASCII characters to number values
 	parameters: a number character
	returns: an integer
- strlen
	description: finds the length of a given string
        parameters: takes in a character string
        returns: the length of the string passed in, as int
- parseTime
	description: parses the user input and sets the internal clock if valid input is given
 	parameters: character buffer from the user
 	returns: a boolean integer whether the clock was set or not
- parseDate: 
	description: parses the user input and sets the internal date if valid input is given
 	parameters: character buffer from the user
 	returns: a boolean integer whether the date was set or not
- parseCommand
	description:parses the user's input in order to select a command
        parameters: a string (char pointer, command from the user)
        returns: the correct command is called
- CommandHandler 
	description: handles the user's input in the command line. Function takes in the user's raw 		inputs and translates them into something our program can use. Also facilitates moving around in 		command line, such as left right, carriage return etc.
        parameters: input from COM1 from buffer
        returns: correct character or action on screen
- Serial import 
	description: uses COM1 to get input from basic IO (later used by command Handler)
        parameters: input from keyboard
	returns: none
- kMain.c 
	description: initializes the following 
		Global Descriptor Table
		programmable interrupt controller
		paging
- strcpy
	description: copies a string to create a new string which is a copy of the original
        parameters:  takes in a char pointer s1 as source and constant char pointer as dest
        returns: pointer to the destination string
- atoi: 
	description: converts a string to int
        parameters: const char
        returns: value of char as an integer
- strcmp
	description: compares 2 string for length and returns difference
        parameters: takes in 2 strings (char pointers)
        returns: difference of strings

----------Commands------------

- turnOff
	description: shuts down mpx machine when command is entered and y is received as a response
        parameters: takes in a char which can be y or n
        returns: shut down signal
- help
	description: shows the user what commands they have access to
        parameters: takes in a string
        returns: list of all available commands for the user and what they do
- version
	description: command from user requesting program version
	parameters: user enters a version command	
	returns: current version
- getTime
	description: displays current system time
	parameters: getTime command issued
	returns: prints current system time
- getDate
	description: displays current system date
	parameters: getDate command issued
	returns: prints current system date
- setTime
	description: allows the user to set system time
        parameters: character buffer from user containing new time
        returns: updates the system's time with the new time from the user
- setDate
	description: allows the user to set system date
        parameters: character buffer from user containing new date
        returns: updates the system's date with the new time from the user
- create PCB
	description: calls setupPCB() and inserts it into the appropriate queue
	parameters: process name, class, and priority
	returns: error if the command entered is invalid
- delete PCB
	description: deletes pcb and frees all associated memory
	parameter: process name
	returns: error if pcb name doesnâ€™t exist
- block PCB
	description: puts PCB in a blocked state and re-inserts it to the appropriate queue
	parameter: process name
	returns: error if PCB is not found
- unblock PCB
	description: puts PCB in a unblocked state and re-inserts it to the appropriate queue
	parameter: process name
	returns: error if PCB is not found
- suspend PCB
	description: suspends PCB and re-inserts it to the appropriate queue
	parameter: process name
	returns: error if PCB is not found
- resume PCB
	description: changed the PCB to a non-suspended state and re-inserts it to the appropriate queue
	parameter: process name
	returns: error if PCB is not found
- set PCB priority
	description: changes PCB's priority and re-inserts it in the appropriate queue and position
	parameter: process name, new priority
	returns: error if PCB is not found or priority is outside 0-9
- show PCB
	description: displaies a PCB's name, state, class, status, and priority
	parameter: process name
	returns: error if PCB is not found
- show ready
	description: displays every PCB in the ready queue's name, state, class, status, and priority
	parameter: none
	returns: none
- show blocked
	description: displays every PCB in the blocked queue's name, state, class, 	status, and priority
	parameter: none
	returns: none
- show all
	description: displays every PCB in the ready and blocked queues' name, state, class, status, and priority
	parameter: none
	returns: none